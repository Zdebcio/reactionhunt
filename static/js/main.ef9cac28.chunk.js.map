{"version":3,"sources":["components/GameOption.js","layouts/Start.js","layouts/Rules.js","components/BackButton.js","layouts/Header.js","components/Counter.js","components/Field.js","components/Results.js","layouts/Game.js","layouts/App.js","serviceWorker.js","index.js"],"names":["GameOption","props","onClick","selectMode","mode","number","className","gameMode","name","Start","gameMods","this","gameOptions","map","key","handleSelectMode","changeComponent","Component","Rules","src","alt","BackButton","isBtnActive","backToPrev","Header","prevComponent","activeComponent","Counter","clickedField","isLevelRender","styles","color","animationName","style","indexTimeout","Field","state","isFieldVisible","firstVisibled","visibleOff","setState","visible","setTimeout","startVisibleOn","field","isTrue","count","Math","floor","random","clickField","id","handleClickField","clearTimeout","fieldsNumber","ref","level","opacity","fontSize","lvlStyles","clickedFieldId","ReactTimeout","Results","points","finishLevel","Game","fieldsInGame","pointsPerRound","renderNewLevel","fields","i","push","length","fieldId","handleNextLevel","fieldWinId","filter","prevState","handleResetGame","App","handleChangeActiveComponent","handleBackToPrevComponent","renderComponent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef9cac28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GameOption = props => {\r\n  return (\r\n    <li\r\n      onClick={() => props.selectMode(props.mode.number)}\r\n      className={\r\n        props.gameMode === props.mode.number\r\n          ? \"start__game-option active\"\r\n          : \"start__game-option\"\r\n      }\r\n    >\r\n      {props.mode.name}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default GameOption;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Start.scss\";\r\nimport GameOption from \"../components/GameOption\";\r\n\r\nclass Start extends Component {\r\n  gameMods = [\r\n    {\r\n      number: 0,\r\n      name: \"Standardowy\"\r\n    },\r\n    {\r\n      number: 1,\r\n      name: \"Tylko 4 pola\"\r\n    },\r\n    {\r\n      number: 2,\r\n      name: \"Tylko 6 pÃ³l\"\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    const { gameMode } = this.props;\r\n\r\n    const gameOptions = this.gameMods.map(mode => {\r\n      return (\r\n        <GameOption\r\n          key={mode.number}\r\n          gameMode={gameMode}\r\n          mode={mode}\r\n          selectMode={this.props.handleSelectMode}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <main className=\"content start\">\r\n          <section className=\"start__game-mode\">\r\n            <h2 className=\"start__title\">Typ gry</h2>\r\n            <ul className=\"start__game-list\">{gameOptions}</ul>\r\n          </section>\r\n          <section className=\"start__bottom-section\">\r\n            <button\r\n              onClick={() => this.props.changeComponent(\"rules\")}\r\n              className=\"start__rules-btn\"\r\n            >\r\n              <i className=\"fas fa-question\"></i>\r\n            </button>\r\n            <button\r\n              onClick={() => this.props.changeComponent(\"game\")}\r\n              className=\"start__new-game-btn\"\r\n            >\r\n              Start\r\n            </button>\r\n          </section>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Start;\r\n","import React from \"react\";\r\nimport \"../styles/Rules.scss\";\r\n\r\nconst Rules = props => {\r\n  return (\r\n    <main className=\"content rules\">\r\n      <h2 className=\"rules__title\">Zasady</h2>\r\n      <p className=\"rules__text\">\r\n        <strong className=\"rules__text--strong\">ReactionHunt</strong> to maÅa\r\n        gra w ktÃ³rej liczy siÄ skupienie i reakcja gracza.\r\n      </p>\r\n      <p className=\"rules__text\">\r\n        Gra zbudowana jest z{\" \"}\r\n        <span className=\"rules__text--span\">kilku kolorowych pÃ³l</span>, z\r\n        ktÃ³rych <span className=\"rules__text--span\">jedno jest wÅaÅciwe</span>.\r\n        W przeciÄgu trzech sekund na prawidÅowym z nich pojawi siÄ na krÃ³tki\r\n        czas <span className=\"rules__text--span\">symbol oka</span>.\r\n      </p>\r\n      <img className=\"rules__img\" src=\"/images/eye-on.png\" alt=\"symbol oka\" />\r\n      <p className=\"rules__text\">\r\n        Zadaniem gracza jest wychwycenie lub trafienie ktÃ³re pole jest prawdziwe\r\n        oraz{\" \"}\r\n        <span className=\"rules__text--span\">\r\n          zdobycie jak najwiÄkszej liczby punktÃ³w\r\n        </span>{\" \"}\r\n        bez spudÅowania.\r\n      </p>\r\n      <p className=\"rules__text\">\r\n        U gÃ³ry ekranu{\" \"}\r\n        <span className=\"rules__text--span\">\r\n          wyÅwietla siÄ czas (w postaci Å¼Ã³ltego paska)\r\n        </span>{\" \"}\r\n        w przeciÄgu ktÃ³rego ma siÄ pojawiÄ symbol oka. Po jego upÅywie gracz\r\n        jest zdany na swojÄ intuicje.\r\n      </p>\r\n\r\n      <p className=\"rules__text\">\r\n        <span className=\"rules__text--span\">\r\n          MoÅ¼na wybraÄ pole w dowolnym momencie gry\r\n        </span>\r\n        , zarÃ³wno przed pojawieniem siÄ samego symbolu jak i po upÅywie czasu\r\n        sugerujÄcego kiedy siÄ moÅ¼e pojawiÄ.\r\n      </p>\r\n      <p className=\"rules__text\">W grze mamy trzy tryby:</p>\r\n      <ol className=\"rules__list\">\r\n        <li className=\"rules__list-text\">\r\n          <span className=\"rules__text--span\">Standardowy</span> â Klasyczny\r\n          tryb w ktÃ³rym grÄ zaczynam od 4 pÃ³l, a wraz z rosnÄcym poziomem\r\n          zwiÄksza siÄ ich iloÅÄ do szeÅciu.\r\n        </li>\r\n        <li className=\"rules__list-text\">\r\n          <span className=\"rules__text--span\">Tylko 4 pola</span> â Tryb Åatwy,\r\n          w ktÃ³rym przez caÅa grÄ wybieramy spoÅrÃ³d tylko 4 pÃ³l.\r\n        </li>\r\n        <li className=\"rules__list-text\">\r\n          <span className=\"rules__text--span\">Tylko 6 pÃ³l</span> â Tryb trudny,\r\n          w ktÃ³rym przez caÅa grÄ wybieramy spoÅrÃ³d 6 pÃ³l.\r\n        </li>\r\n      </ol>\r\n      <p className=\"rules__text\">\r\n        Dodatkowo wraz ze wzrostem poziomÃ³w{\" \"}\r\n        <span className=\"rules__text--span\">zwiÄksza siÄ trudnoÅÄ gry</span> w\r\n        postaci zmiany wielkoÅci i widocznoÅci ikony oka.\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Rules;\r\n","import React from \"react\";\r\n\r\nconst BackButton = props => {\r\n  if (props.isBtnActive) {\r\n    return (\r\n      <button onClick={props.backToPrev} className=\"header__back-button\">\r\n        <i className=\"fas fa-arrow-left\"></i>\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className=\"header__back-button header__back-button--disabled\">\r\n        <i className=\"fas fa-arrow-left\"></i>\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BackButton;\r\n","import React from \"react\";\r\n\r\nimport BackButton from \"../components/BackButton\";\r\n\r\nimport \"../styles/Header.scss\";\r\n\r\nconst Header = props => {\r\n  let isBtnActive = true;\r\n  if (props.prevComponent === props.activeComponent) {\r\n    isBtnActive = false;\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__logo\">\r\n        Reaction<span className=\"header__logo--color\">Hunt</span>\r\n      </h1>\r\n      <BackButton isBtnActive={isBtnActive} backToPrev={props.backToPrev} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Counter = props => {\r\n  const { clickedField, isLevelRender } = props;\r\n\r\n  const styles =\r\n    !clickedField && isLevelRender\r\n      ? { color: \"red\", animationName: \"counter\" }\r\n      : {};\r\n\r\n  return <div style={styles} className=\"game__counter\"></div>;\r\n};\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Field.scss\";\r\nimport ReactTimeout from \"react-timeout\";\r\n\r\nlet indexTimeout = null;\r\n\r\nclass Field extends Component {\r\n  state = {\r\n    isFieldVisible: false,\r\n    firstVisibled: false\r\n  };\r\n\r\n  visibleOff = () => {\r\n    this.setState({\r\n      isFieldVisible: false\r\n    });\r\n  };\r\n\r\n  visible = () => {\r\n    this.setState({\r\n      isFieldVisible: true,\r\n      firstVisibled: true\r\n    });\r\n    this.props.setTimeout(this.visibleOff, 100);\r\n  };\r\n\r\n  startVisibleOn = () => {\r\n    if (\r\n      this.props.field.isTrue &&\r\n      !this.props.clickedField &&\r\n      !this.state.isFieldVisible\r\n    ) {\r\n      const count = Math.floor(Math.random() * (3000 - 800) + 800);\r\n      indexTimeout = this.props.setTimeout(this.visible, count);\r\n    }\r\n  };\r\n\r\n  clickField = id => {\r\n    this.props.handleClickField(id);\r\n    this.props.clearTimeout(indexTimeout);\r\n  };\r\n\r\n  render() {\r\n    const { isTrue, id } = this.props.field;\r\n    const { fieldsNumber } = this.props;\r\n\r\n    if (!this.state.firstVisibled) this.startVisibleOn();\r\n\r\n    const isCorrect = () => {\r\n      if (this.props.clickedField) {\r\n        if (isTrue) {\r\n          return <i className=\"fas fa-check\"></i>;\r\n        } else if (this.props.clickedFieldId === id) {\r\n          return <i className=\"fas fa-times\"></i>;\r\n        } else {\r\n          return null;\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    const lvlStyles = () => {\r\n      const { level } = this.props;\r\n\r\n      if (level > 10) {\r\n        if (level > 20) {\r\n          if (level > 30) {\r\n            if (level > 40) {\r\n              return {\r\n                opacity: \"0.05\",\r\n                fontSize: \"2rem\"\r\n              };\r\n            }\r\n            return {\r\n              opacity: \"0.05\",\r\n              fontSize: \"3rem\"\r\n            };\r\n          }\r\n          return {\r\n            opacity: \"0.2\",\r\n            fontSize: \"4rem\"\r\n          };\r\n        }\r\n        return {\r\n          opacity: \"0.5\"\r\n        };\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          fieldsNumber === 6\r\n            ? \"game__field field game__field--six\"\r\n            : \"game__field field\"\r\n        }\r\n        ref={this.ref}\r\n        onClick={() => this.clickField(id)}\r\n      >\r\n        {this.state.isFieldVisible && (\r\n          <i style={lvlStyles()} className=\"fas fa-eye\"></i>\r\n        )}\r\n        {isCorrect()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactTimeout(Field);\r\n","import React from \"react\";\r\n\r\nconst Results = props => {\r\n  const { points, level } = props;\r\n  return (\r\n    <section className=\"game__stats\">\r\n      <div className=\"game__results\">\r\n        <h2 className=\"game__title\">{points}</h2>\r\n        <h3 className=\"game__title game__title--small\">Poziom {level}</h3>\r\n      </div>\r\n      <div className=\"game__complete\">{props.finishLevel()}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"../components/Counter\";\r\nimport Field from \"../components/Field\";\r\n\r\nimport \"../styles/Game.scss\";\r\nimport Results from \"../components/Results\";\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    fieldsInGame: [],\r\n    fieldsNumber: 4,\r\n    points: 0,\r\n    pointsPerRound: null,\r\n    level: 1,\r\n    clickedField: false,\r\n    clickedFieldId: null,\r\n    isLevelRender: false\r\n  };\r\n\r\n  renderNewLevel = () => {\r\n    const { fieldsNumber } = this.state;\r\n    const fields = [];\r\n\r\n    for (let i = 0; i < fieldsNumber; i++) {\r\n      fields.push({ id: i + 1, isTrue: false });\r\n    }\r\n    fields[Math.floor(Math.random() * fields.length)].isTrue = true;\r\n\r\n    this.setState({\r\n      fieldsInGame: fields\r\n    });\r\n\r\n    if (fields.length === 4) {\r\n      this.setState({\r\n        pointsPerRound: 2\r\n      });\r\n    } else if (fields.length === 6) {\r\n      this.setState({\r\n        pointsPerRound: 3\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { gameMode } = this.props;\r\n    if (gameMode === 0 || gameMode === 1) {\r\n      this.setState({\r\n        fieldsNumber: 4\r\n      });\r\n    } else if (gameMode === 2) {\r\n      this.setState({\r\n        fieldsNumber: 6\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { clickedField, isLevelRender } = this.state;\r\n    if (!clickedField && !isLevelRender) {\r\n      this.renderNewLevel();\r\n      this.setState({\r\n        isLevelRender: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClickField = fieldId => {\r\n    if (!this.state.clickedField)\r\n      this.setState({\r\n        clickedField: true,\r\n        clickedFieldId: fieldId\r\n      });\r\n  };\r\n\r\n  handleNextLevel = () => {\r\n    const {\r\n      pointsPerRound,\r\n      fieldsInGame,\r\n      clickedField,\r\n      clickedFieldId,\r\n      level\r\n    } = this.state;\r\n    const fields = [...fieldsInGame];\r\n    const fieldWinId = fields.filter(field => field.isTrue);\r\n    if (clickedField && clickedFieldId === fieldWinId[0].id)\r\n      this.setState(prevState => ({\r\n        clickedField: false,\r\n        clickedFieldId: null,\r\n        points: prevState.points + pointsPerRound,\r\n        level: prevState.level + 1,\r\n        isLevelRender: false\r\n      }));\r\n\r\n    if (this.props.gameMode === 0 && level === 10) {\r\n      this.setState({ fieldsNumber: 6, pointsPerRound: 3 });\r\n    }\r\n  };\r\n\r\n  handleResetGame = () => {\r\n    this.setState({\r\n      points: 0,\r\n      level: 1,\r\n      clickedField: false,\r\n      clickedFieldId: null,\r\n      isLevelRender: false\r\n    });\r\n  };\r\n\r\n  finishLevel = () => {\r\n    const { clickedField, clickedFieldId } = this.state;\r\n    if (clickedField) {\r\n      const fieldWinId = [...this.state.fieldsInGame].filter(\r\n        field => field.isTrue\r\n      );\r\n      if (clickedFieldId === fieldWinId[0].id) {\r\n        return (\r\n          <>\r\n            <span className=\"game__complete-title game__complete-title--win\">\r\n              Gratulacje, wygraÅeÅ!\r\n            </span>\r\n            <button\r\n              className=\"game__complete-button\"\r\n              onClick={this.handleNextLevel}\r\n            >\r\n              NastÄpny poziom\r\n            </button>\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <span className=\"game__complete-title game__complete-title--lose\">\r\n              PrzegraÅeÅ!\r\n            </span>\r\n            <button\r\n              className=\"game__complete-button\"\r\n              onClick={this.handleResetGame}\r\n            >\r\n              Zagraj ponownie\r\n            </button>\r\n          </>\r\n        );\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      fieldsInGame,\r\n      points,\r\n      level,\r\n      clickedField,\r\n      clickedFieldId,\r\n      fieldsNumber,\r\n      isLevelRender\r\n    } = this.state;\r\n\r\n    const fields = fieldsInGame.map(field => (\r\n      <Field\r\n        key={field.id}\r\n        field={field}\r\n        handleClickField={this.handleClickField}\r\n        clickedField={clickedField}\r\n        clickedFieldId={clickedFieldId}\r\n        fieldsNumber={fieldsNumber}\r\n        level={level}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <main className=\"content game\">\r\n        <Counter clickedField={clickedField} isLevelRender={isLevelRender} />\r\n        <div className=\"game__wrapper\">\r\n          <Results\r\n            points={points}\r\n            level={level}\r\n            finishLevel={this.finishLevel}\r\n          />\r\n          <section className=\"game__board\">\r\n            {this.state.isLevelRender && fields}\r\n          </section>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\nimport Start from \"./Start\";\nimport Rules from \"./Rules\";\nimport Header from \"./Header\";\nimport Game from \"./Game\";\n\nimport \"../styles/App.scss\";\n\nclass App extends Component {\n  state = {\n    gameMode: 0,\n    activeComponent: \"start\",\n    prevComponent: \"start\"\n  };\n\n  handleChangeActiveComponent = name => {\n    this.setState(prevState => ({\n      activeComponent: name,\n      prevComponent: prevState.activeComponent\n    }));\n  };\n\n  handleBackToPrevComponent = () => {\n    this.setState(prevState => ({\n      activeComponent: prevState.prevComponent\n    }));\n  };\n\n  handleSelectMode = number => {\n    this.setState({\n      gameMode: number\n    });\n  };\n\n  render() {\n    const { gameMode, activeComponent, prevComponent } = this.state;\n\n    const renderComponent = () => {\n      switch (activeComponent) {\n        case \"start\":\n          return (\n            <Start\n              gameMode={gameMode}\n              handleSelectMode={this.handleSelectMode}\n              changeComponent={this.handleChangeActiveComponent}\n            />\n          );\n        case \"game\":\n          return <Game gameMode={gameMode} />;\n        case \"rules\":\n          return <Rules />;\n        default:\n          return null;\n      }\n    };\n\n    return (\n      <>\n        <Header\n          backToPrev={this.handleBackToPrevComponent}\n          activeComponent={activeComponent}\n          prevComponent={prevComponent}\n        />\n        {renderComponent()}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./layouts/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}